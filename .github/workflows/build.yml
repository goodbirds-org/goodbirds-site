name: Build Goodbirds Maps

on:
  schedule:
    - cron: "0 16 * * *"
    - cron: "0 1 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: build-maps
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        city:
          - slug: cambridge
            title: "Cambridge, MA & Vicinity"
            center_lat: "42.378500"
            center_lon: "-71.115600"
            ring_kms: "5,10,15,20"
            default_radius_km: "20"
            maps_subdir: "cambridge"
            latest_href: "maps/cambridge/latest.html"
          - slug: north-cambridge
            title: "North Cambridge, MA and Vicinity"
            center_lat: "42.400973"
            center_lon: "-71.135970"
            ring_kms: "1,5,10"   # updated rings
            default_radius_km: "10"
            maps_subdir: "north-cambridge"
            latest_href: "maps/north-cambridge/latest.html"

    env:
      BASE_URL: https://goodbirds-org.github.io/goodbirds-site
      LOGO_BASENAME: goodbirds_logo_text.png
      MAP_LOGO_URL: ./goodbirds_logo_text.png

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -V
          pip -V
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure docs directories exist
        run: |
          set -euxo pipefail
          mkdir -p docs/maps/${{ matrix.city.maps_subdir }}
          mkdir -p docs/${{ matrix.city.slug }}

      - name: Copy Goodbirds logo into docs
        run: |
          set -euxo pipefail
          if [ -f "${{ env.LOGO_BASENAME }}" ]; then
            cp "${{ env.LOGO_BASENAME }}" "docs/${{ env.LOGO_BASENAME }}"
          else
            echo "Logo file ${{ env.LOGO_BASENAME }} not found at repo root."
          fi

      - name: Build map for ${{ matrix.city.title }}
        env:
          EBIRD_API_KEY: ${{ secrets.EBIRD_API_KEY }}
          OUTPUT_DIR: docs/maps/${{ matrix.city.maps_subdir }}
          MAP_LOGO_FILE: ${{ github.workspace }}/docs/${{ env.LOGO_BASENAME }}
          MAP_LOGO_URL: ${{ env.BASE_URL }}/${{ env.LOGO_BASENAME }}
          ARCHIVE_URL: ${{ env.BASE_URL }}/${{ matrix.city.slug }}/archive.html
          MAP_MAIN_TITLE: ${{ matrix.city.title }}
          CENTER_LAT: ${{ matrix.city.center_lat }}
          CENTER_LON: ${{ matrix.city.center_lon }}
          DEFAULT_RADIUS_KM: ${{ matrix.city.default_radius_km }}
          BACK_DAYS: "2"
          MAX_RESULTS: "200"
          ZOOM_START: "11"
          RING_KMS: ${{ matrix.city.ring_kms }}
        run: |
          set -euxo pipefail
          python -m pip freeze
          python scripts/build_map.py

      - name: Write /${{ matrix.city.slug }}/index.html redirect to latest
        run: |
          set -euxo pipefail
          cat > docs/${{ matrix.city.slug }}/index.html <<EOF
          <!doctype html>
          <meta charset="utf-8">
          <meta http-equiv="refresh" content="0; url=${{ matrix.city.latest_href }}">
          <title>Redirecting</title>
          <p>If you are not redirected, <a href="${{ matrix.city.latest_href }}">open the latest map</a>.</p>
          EOF

      - name: Build /${{ matrix.city.slug }}/archive.html
        env:
          CITY_SLUG: ${{ matrix.city.slug }}
          CITY_TITLE: ${{ matrix.city.title }}
          MAPS_SUBDIR: ${{ matrix.city.maps_subdir }}
          BASE_URL: ${{ env.BASE_URL }}
          LOGO_BASENAME: ${{ env.LOGO_BASENAME }}
          ARCHIVE_DAYS: '7'
        run: |
          set -euxo pipefail
          python scripts/build_archive.py

      - name: Commit and push city outputs with rebase and retry
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euxo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Build maps for ${{ matrix.city.title }} into docs/maps/${{ matrix.city.maps_subdir }} and update pages"
          branch="${BRANCH_NAME:-main}"
          git fetch origin "$branch"
          git pull --rebase origin "$branch" || true
          if ! git push origin "$branch"; then
            git pull --rebase origin "$branch"
            git push origin "$branch"
          fi

  landing:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure logo exists in docs
        run: |
          set -euxo pipefail
          if [ -f "goodbirds_logo_text.png" ]; then
            cp "goodbirds_logo_text.png" "docs/goodbirds_logo_text.png"
          fi

      - name: Write Pages landing index
        run: |
          set -euxo pipefail
          cat > docs/index.html <<'HTML'
          <!doctype html>
          <html lang="en">
          <head>
            <meta charset="utf-8">
            <title>Goodbirds Maps</title>
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
              :root { --ink:#111;--muted:#555;--line:#e5e5e5;--accent:#2c7fb8;--bg:#fafafa;--card:#fff;--radius:14px;}
              html,body{margin:0;padding:0;background:var(--bg);color:var(--ink);font:16px/1.5 system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;}
              .wrap{max-width:960px;margin:40px auto;padding:0 20px;}
              .brand{display:flex;align-items:center;gap:16px;}
              .brand img{height:84px;}
              h1{font-size:28px;margin:12px 0 0;}
              p.lead{margin:10px 0 26px;color:var(--muted);font-size:17px;}
              .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:16px;}
              .card{background:var(--card);border:1px solid var(--line);border-radius:var(--radius);padding:16px 18px;transition:transform .12s ease,box-shadow .12s ease,border-color .12s ease;}
              .card:hover{transform:translateY(-2px);box-shadow:0 6px 18px rgba(0,0,0,.08);border-color:#d9d9d9;}
              .city{display:block;text-decoration:none;color:inherit;}
              .city h2{margin:2px 0 4px;font-size:20px;letter-spacing:.2px;}
              .city small{color:var(--muted);}
              .actions{margin-top:10px;display:flex;gap:10px;flex-wrap:wrap;}
              .btn{appearance:none;border:1px solid var(--line);background:#fff;color:var(--ink);border-radius:10px;padding:8px 12px;text-decoration:none;font-size:14px;transition:background .12s ease,border-color .12s ease;}
              .btn:hover{background:#f5f7fb;border-color:#d9e6f4;}
              .btn.primary{border-color:var(--accent);color:#0a2b42;}
              hr{border:0;border-top:1px solid var(--line);margin:28px 0;}
              .credits{color:var(--muted);font-size:14px;}
              .credits a{color:inherit;}
              footer{margin-top:24px;color:var(--muted);font-size:13px;}
            </style>
          </head>
          <body>
            <main class="wrap">
              <header class="brand">
                <img src="goodbirds_logo_text.png" alt="Goodbirds">
                <div>
                  <h1>Goodbirds Maps</h1>
                  <p class="lead">Daily snapshots of notable bird sightings around our cities. Built from the eBird API and rendered as interactive maps.</p>
                </div>
              </header>

              <section class="grid" aria-label="Cities">
                <article class="card">
                  <a class="city" href="cambridge/">
                    <h2>Cambridge, MA</h2>
                    <small>Latest map</small>
                  </a>
                  <div class="actions">
                    <a class="btn primary" href="cambridge/">Open map</a>
                    <a class="btn" href="cambridge/archive.html">Archive</a>
                  </div>
                </article>

                <article class="card">
                  <a class="city" href="north-cambridge/">
                    <h2>North Cambridge, MA</h2>
                    <small>Latest map</small>
                  </a>
                  <div class="actions">
                    <a class="btn primary" href="north-cambridge/">Open map</a>
                    <a class="btn" href="north-cambridge/archive.html">Archive</a>
                  </div>
                </article>
              </section>

              <hr>

              <section class="credits" aria-label="About">
                <p><strong>About the project</strong></p>
                <p>Goodbirds pulls recent Notable sightings from eBird for selected radii and renders them to folium Leaflet maps. Each city page links to the most recent build and an archive of past builds. The goal is fast loading, clear labeling, and a clean path to original eBird checklists.</p>
                <p><strong>Built with</strong>: <a href="https://ebird.org/data/download" rel="noopener">eBird API</a>, <a href="https://python.org" rel="noopener">Python</a>, <a href="https://requests.readthedocs.io/" rel="noopener">Requests</a>, <a href="https://python-visualization.github.io/folium/" rel="noopener">folium</a> on top of <a href="https://leafletjs.com/" rel="noopener">Leaflet</a>, <a href="https://pages.github.com/" rel="noopener">GitHub Pages</a>, and <a href="https://github.com/actions" rel="noopener">GitHub Actions</a>.</p>
              </section>

              <footer>
                <p>&copy; <span id="y"></span> Goodbirds. All sightings data courtesy of eBird and its contributors.</p>
              </footer>
            </main>
            <script>document.getElementById('y').textContent = new Date().getFullYear();</script>
          </body>
          </html>
          HTML

      - name: Commit and push landing with rebase and retry
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euxo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No landing changes to commit."
            exit 0
          fi
          git commit -m "Update landing index for GitHub Pages"
          branch="${BRANCH_NAME:-main}"
          git fetch origin "$branch"
          git pull --rebase origin "$branch" || true
          if ! git push origin "$branch"; then
            git pull --rebase origin "$branch"
            git push origin "$branch"
          fi
