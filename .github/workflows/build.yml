name: Build Goodbirds Maps

on:
  schedule:
    - cron: "0 16 * * *"
    - cron: "0 1 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: build-maps
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        city:
          - slug: cambridge
            title: "Cambridge, MA & Vicinity"
            center_lat: "42.378500"
            center_lon: "-71.115600"
            ring_kms: "5,10,15,20"
            default_radius_km: "20"
            maps_subdir: "cambridge"
            latest_href: "maps/cambridge/latest.html"
          - slug: north-cambridge
            title: "North Cambridge, MA and Vicinity"
            center_lat: "42.400973"
            center_lon: "-71.135970"
            ring_kms: "5,10,15"
            default_radius_km: "15"
            maps_subdir: "north-cambridge"
            latest_href: "maps/north-cambridge/latest.html"

    env:
      # Absolute base so links work when followed from goodbirds.org
      BASE_URL: https://goodbirds-org.github.io/goodbirds-site
      LOGO_BASENAME: goodbirds_logo_text.png
      MAP_LOGO_URL: ./goodbirds_logo_text.png

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -V
          pip -V
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure docs directories exist
        run: |
          set -euxo pipefail
          mkdir -p docs/maps/${{ matrix.city.maps_subdir }}
          mkdir -p docs/${{ matrix.city.slug }}

      - name: Copy logo into docs if present at repo root
        run: |
          set -euxo pipefail
          if [ -f "${{ env.LOGO_BASENAME }}" ]; then
            cp "${{ env.LOGO_BASENAME }}" "docs/${{ env.LOGO_BASENAME }}"
          fi

      - name: Build map for ${{ matrix.city.title }}
        env:
          EBIRD_API_KEY: ${{ secrets.EBIRD_API_KEY }}
          OUTPUT_DIR: docs/maps/${{ matrix.city.maps_subdir }}
          MAP_LOGO_FILE: ${{ github.workspace }}/docs/${{ env.LOGO_BASENAME }}
          MAP_LOGO_URL: ${{ env.BASE_URL }}/${{ env.LOGO_BASENAME }}         # absolute for cross-origin links
          ARCHIVE_URL: ${{ env.BASE_URL }}/${{ matrix.city.slug }}/archive.html  # absolute for cross-origin links
          MAP_MAIN_TITLE: ${{ matrix.city.title }}
          CENTER_LAT: ${{ matrix.city.center_lat }}
          CENTER_LON: ${{ matrix.city.center_lon }}
          DEFAULT_RADIUS_KM: ${{ matrix.city.default_radius_km }}
          BACK_DAYS: "2"
          MAX_RESULTS: "200"
          ZOOM_START: "11"
          RING_KMS: ${{ matrix.city.ring_kms }}
        run: |
          set -euxo pipefail
          python -m pip freeze
          python scripts/build_map.py

      - name: Write redirect /${{ matrix.city.slug }}/index.html to latest
        env:
          LATEST: ${{ matrix.city.latest_href }}
        run: |
          set -euxo pipefail
          cat > docs/${{ matrix.city.slug }}/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <meta http-equiv="refresh" content="0; url=${LATEST}">
          <title>Redirecting</title>
          <p>If you are not redirected, <a href="${LATEST}">open the latest map</a>.</p>
          HTML

      - - name: Build /${{ matrix.city.slug }}/archive.html
  env:
    CITY_SLUG: ${{ matrix.city.slug }}
    CITY_TITLE: ${{ matrix.city.title }}
    MAPS_SUBDIR: ${{ matrix.city.maps_subdir }}
    BASE_URL: ${{ env.BASE_URL }}
  run: |
    set -euxo pipefail
    python scripts/build_archive.py


      - name: Commit and push city outputs with rebase and retry
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euxo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Build maps for ${{ matrix.city.title }} into docs/maps/${{ matrix.city.maps_subdir }} and update pages"
          branch="${BRANCH_NAME:-main}"
          git fetch origin "$branch"
          git pull --rebase origin "$branch" || true
          if ! git push origin "$branch"; then
            git pull --rebase origin "$branch"
            git push origin "$branch"
          fi

  landing:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write Pages landing index
        run: |
          set -euxo pipefail
          cat > docs/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <title>Goodbirds Maps</title>
          <h1>Goodbirds Maps</h1>
          <ul>
            <li><a href="maps/cambridge/latest.html">Cambridge, MA &amp; Vicinity</a></li>
            <li><a href="maps/north-cambridge/latest.html">North Cambridge, MA and Vicinity</a></li>
          </ul>
          HTML

      - name: Commit and push landing with rebase and retry
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euxo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No landing changes to commit."
            exit 0
          fi
          git commit -m "Update landing index for GitHub Pages"
          branch="${BRANCH_NAME:-main}"
          git fetch origin "$branch"
          git pull --rebase origin "$branch" || true
          if ! git push origin "$branch"; then
            git pull --rebase origin "$branch"
            git push origin "$branch"
          fi
