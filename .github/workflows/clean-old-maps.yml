name: Clean old maps

on:
  schedule:
    - cron: "0 5 * * 2"   # 01:00 Tue EDT
    - cron: "0 6 * * 2"   # 01:00 Tue EST
  workflow_dispatch:
    inputs:
      force:
        description: "Bypass time guard"
        type: boolean
        default: false
      dry_run:
        description: "List files but do not delete"
        type: boolean
        default: false
      verbose:
        description: "Verbose logging"
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Time guard or force
        id: guard
        run: |
          python - << 'PY'
          import os
          from datetime import datetime
          from zoneinfo import ZoneInfo
          force = os.environ.get("INPUT_FORCE","false").lower() == "true"
          now_ny = datetime.now(ZoneInfo("America/New_York"))
          should_run = force or (now_ny.weekday() == 1 and now_ny.hour == 1)
          print(f"now_ny={now_ny.isoformat()} force={force} should_run={should_run}")
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"run_ok={'true' if should_run else 'false'}\n")
          PY

      - name: Pre-check - list candidate files
        if: steps.guard.outputs.run_ok == 'true'
        run: |
          echo "Listing candidate files under docs/maps:"
          ls -1R docs/maps || true

      - name: Run cleaner
        if: steps.guard.outputs.run_ok == 'true'
        env:
          DRY_RUN: ${{ inputs.dry_run }}
          VERBOSE: ${{ inputs.verbose }}
        run: python scripts/clean_old_maps.py

      - name: Show git changes
        if: steps.guard.outputs.run_ok == 'true'
        run: |
          git status --porcelain=v1
          git diff --name-status

      - name: Commit and push deletions (if any and not dry-run)
        if: steps.guard.outputs.run_ok == 'true' && inputs.dry_run != true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add -A
            git commit -m "Remove map files older than 7 days"
            git push
          else
            echo "No changes to commit"

      - name: Post-check - fail if old files remain (only when not dry-run)
        if: steps.guard.outputs.run_ok == 'true' && inputs.dry_run != true
        run: |
          python - << 'PY'
          import pathlib, re, sys
          from datetime import datetime, timedelta, timezone
          ROOT = pathlib.Path("docs/maps")
          AGE_DAYS = 7
          rx = re.compile(r"^ebird_radius_map_(\d{4}-\d{2}-\d{2})_[0-2]\d[-_][0-5]\d[-_][0-5]\d_.*\.html$")
          cutoff = (datetime.now(timezone.utc) - timedelta(days=AGE_DAYS)).date()
          offenders = []
          for html in ROOT.glob("**/ebird_radius_map_*.html"):
            m = rx.match(html.name)
            if not m: 
              continue
            from datetime import datetime as dt
            file_date = dt.strptime(m.group(1), "%Y-%m-%d").date()
            if file_date < cutoff:
              offenders.append(str(html))
          if offenders:
            print("Still-present old files (should have been deleted):")
            for p in offenders:
              print(" -", p)
            sys.exit(2)
          else:
            print("No old files remain.")
          PY

      - name: Skipped
        if: steps.guard.outputs.run_ok != 'true'
        run: echo "Skipped by time guard and force=false"
